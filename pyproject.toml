[build-system]
requires = ["setuptools>=46.4.0"]
build-backend = "setuptools.build_meta"

[project]
name = "spandrel"
authors = [{ name = "chaiNNer team" }]
description = "Give your project support for a variety of PyTorch model architectures, including auto-detecting model architecture from just .pth files. spandrel gives you arch support."
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "spandrel",
    "pytorch architecture",
    "pytorch arch",
    "model arch",
    "model architecture",
]
license = { text = "GPLv3" }
classifiers = [
    # see https://pypi.org/classifiers/
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
]
dependencies = ["torch", "torchvision", "safetensors", "numpy", "einops"]
dynamic = ["version"]

[project.optional-dependencies]
build = ["build", "twine"]
lint = ["ruff==0.1.8"]
typecheck = ["pyright==1.1.342"]
test = ["pytest==7.4.0", "syrupy==4.6.0", "opencv-python==4.8.1.78"]

[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools.dynamic]
version = { attr = "spandrel.__version__" }

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

src = ["src"]

# ignore vendored code
# extend-exclude = ["src/architectures/**"]

extend-select = [
    "ANN001",
    "ANN002",
    "E",      # pycodestyle
    "F",      # pyflakes
    "FA",     # flake8-future-annotations
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "W",      # pycodestyle
]
ignore = [
    "E501", # Line too long
    "N814", # Camelcase imported as constant
    "N999", # Invalid module name
]

[tool.ruff.lint.per-file-ignores]
"**/__arch_helpers/**/*" = ["N", "ANN"]
"**/arch/**/*" = ["N", "ANN"]
"**/tests/**/*" = ["N802", "ANN"]

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning", "ignore::UserWarning"]
